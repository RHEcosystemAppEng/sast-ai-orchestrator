name: Build Release Image

on:
  release:
    types: [published]

env:
  REGISTRY: quay.io
  IMAGE_NAME: ecosystem-appeng/sast-ai-orchestrator

jobs:
  build-and-publish-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v5
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build JVM application
      run: |
        ./mvnw clean package -DskipTests

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Quay.io
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=ref,event=tag

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./src/main/docker/Dockerfile.jvm
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Image digest
      run: echo ${{ steps.build.outputs.digest }}

    - name: Update Helm chart with release version
      run: |
        # Extract the release tag
        RELEASE_TAG="${{ github.event.release.tag_name }}"
        echo "Release tag: $RELEASE_TAG"
        
        # Update the values.yaml file with the release tag
        sed -i "s/tag: \".*\"/tag: \"$RELEASE_TAG\"/" deploy/sast-ai-chart/values.yaml
        
        # Also update the chart version to match the release
        sed -i "s/version: .*/version: $RELEASE_TAG/" deploy/sast-ai-chart/Chart.yaml
        sed -i "s/appVersion: .*/appVersion: $RELEASE_TAG/" deploy/sast-ai-chart/Chart.yaml
        
        # Verify the changes
        echo "Updated values.yaml:"
        grep -A 5 -B 5 "tag:" deploy/sast-ai-chart/values.yaml
        echo "Updated Chart.yaml:"
        grep -E "(version|appVersion):" deploy/sast-ai-chart/Chart.yaml


    - name: Update release with container info
      uses: actions/github-script@v8
      with:
        script: |
          const { owner, repo } = context.repo;
          const release = await github.rest.repos.getReleaseByTag({
            owner,
            repo,
            tag: context.ref.replace('refs/tags/', '')
          });
          
          const containerInfo = `

          ## üì¶ Container Images

          This release includes the following container images published to Quay.io:

          - \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}\`
          - \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest\`

          ### üê≥ Usage

          \`\`\`bash
          # Pull specific version
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          
          # Pull latest
          podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          \`\`\`

          ### üîó Registry
          View all versions: [Quay.io Repository](https://quay.io/repository/ecosystem-appeng/sast-ai-orchestrator)
          `;
          
          await github.rest.repos.updateRelease({
            owner,
            repo,
            release_id: release.data.id,
            body: release.data.body + containerInfo
          });
