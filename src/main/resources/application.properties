# PostgreSQL setup
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=quarkus
quarkus.datasource.password=quarkus
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/sast-ai

# Optional: disable schema generation
quarkus.hibernate-orm.database.generation=drop-and-create

# Optional: show SQL queries
quarkus.hibernate-orm.log.sql=false

# Application version (filtered from Maven at build time)
quarkus.application.version=${project.version}

# sast.ai.workflow.namespace=${SAST_AI_WORKFLOW_NAMESPACE:jude-test}
# sast.ai.workflow.known.false.positive.base.repo=${KNOWN_FALSE_POSITIVE_BASE_REPO:https://please-provide-known-false-positives-repo-link}
sast.ai.workflow.namespace=${SAST_AI_WORKFLOW_NAMESPACE:sast-ai}
quarkus.log.category."org.jboss.logging".level=DEBUG
quarkus.kubernetes-client.trust-certs=false

# Google Service Account configuration
google.service.account.secret.path=${GOOGLE_SERVICE_ACCOUNT_SECRET_PATH:/etc/secrets/google-service-account-secret/service_account.json}
google.service.account.enabled=${GOOGLE_SERVICE_ACCOUNT_ENABLED:true}

# PVC storage configuration
sast.ai.workspace.shared.size=20Gi
sast.ai.workspace.cache.size=10Gi

# Cleanup configuration
sast.ai.cleanup.completed.pipelineruns=false

# Google Service Account configuration
google.service.account.secret.path=${GOOGLE_SERVICE_ACCOUNT_SECRET_PATH:/etc/secrets/google-service-account-secret/service_account.json}
google.service.account.enabled=${GOOGLE_SERVICE_ACCOUNT_ENABLED:true}
    
# PVC storage configuration
sast.ai.workspace.shared.size=20Gi
sast.ai.workspace.cache.size=10Gi

# Cleanup configuration
sast.ai.cleanup.completed.pipelineruns=false